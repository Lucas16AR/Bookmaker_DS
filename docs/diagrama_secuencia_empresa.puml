@startuml
actor Admin
boundary ClienteControllers
participant Cliente_Schema
entity ClienteModels
database data

Admin -> ClienteControllers: GET by Id (Request)
activate ClienteControllers
ClienteControllers -> ClienteModels: get_or_404()
activate ClienteModels
ClienteModels -> data: query (SELECT)
ClienteModels <- data: Register
Cliente_Schema <- ClienteModels: Object cliente
deactivate ClienteModels
activate Cliente_Schema
ClienteControllers <- Cliente_Schema: Json cliente
deactivate Cliente_Schema
Admin <- ClienteControllers: json (Response)
deactivate ClienteControllers

Admin -> ClienteControllers: PUT by Id (Request)
activate ClienteControllers
ClienteControllers -> ClienteModels: get_or_404()
activate ClienteModels
ClienteModels -> data: query (SELECT)
ClienteModels <- data: Register
ClienteControllers <- ClienteModels: Object cliente
deactivate ClienteModels
ClienteControllers -> ClienteModels: Add
activate ClienteModels
ClienteControllers -> ClienteModels: Commit
ClienteModels -> data: UPDATE
ClienteModels <- data: Register
Cliente_Schema <- ClienteModels: Object cliente
deactivate ClienteModels
activate Cliente_Schema
ClienteControllers <- Cliente_Schema: Json cliente
deactivate Cliente_Schema
Admin <- ClienteControllers: json (Response)
deactivate ClienteControllers

Admin -> ClienteControllers: DELETE by Id (Request)
activate ClienteControllers
ClienteControllers-> ClienteModels: get_or_404()
activate ClienteModels
ClienteModels -> data: query (SELECT)
ClienteModels <- data: register
deactivate ClienteModels
ClienteControllers <- ClienteModels: delete
activate ClienteModels
ClienteControllers -> ClienteModels: Commit
ClienteModels -> data: DELETE
deactivate ClienteModels
Admin <- ClienteControllers: Request(Status OK)
deactivate ClienteControllers
@enduml
